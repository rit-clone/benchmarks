# ################################
# Recipe for training then testing speaker embeddings using the VoxCeleb1 Dataset.
# Embeddings are used using the Xvector network
#
# Authors
# * Pooneh Mousavi 2024
# ################################

# Basic parameters
seed: 1986
__set_seed: !apply:torch.manual_seed [!ref <seed>]
output_folder: !ref results/VoxCeleb1/speech_tokenizer/xvector<seed>
save_folder: !ref <output_folder>/save
train_log: !ref <output_folder>/train_log.txt
# Data files
data_folder: !PLACEHOLDER  # e.g. /path/to/Voxceleb
train_annotation: !ref <save_folder>/train.csv
valid_annotation: !ref <save_folder>/dev.csv


# Use the following links for the official voxceleb splits:
# Therefore you cannot use any files in VoxCeleb1 for training
# if you are using these lists for testing.
verification_file: https://www.robots.ox.ac.uk/~vgg/data/voxceleb/meta/veri_test2.txt

train_data: !ref <save_folder>/train.csv
enrol_data: !ref <save_folder>/enrol.csv
test_data: !ref <save_folder>/test.csv

verif_batch_size: 2
n_train_snts: 300000 # used for normalization stats

# Dataloader options
train_dataloader_opts:
    batch_size: !ref <batch_size>
    drop_last: True
enrol_dataloader_opts:
    batch_size: !ref <batch_size>

test_dataloader_opts:
    batch_size: !ref <batch_size>


skip_prep: False
ckpt_interval_minutes: 15 # save checkpoint every N min
pretrain: True
do_verification: True

# Training parameters
precision: fp32
number_of_epochs: 15
batch_size: 8
lr: 0.001
lr_final: 0.0001
mask_length: 10
mask_prob: 0.65
original_sample_rate: 16000
shuffle: True
random_chunk: True
sentence_len: 3

### Config for Tokenizer
vocab_size: 1024
num_codebooks: 2
sample_rate: 16000
# Feature parameters
encoder_dim: 1024

# Number of speakers
out_n_neurons: 1211  #1211 for vox1  # 5994 for vox2, 7205 for vox1+vox2

freeze_wav2vec: True
dataloader_options:
    batch_size: !ref <batch_size>
    shuffle: !ref <shuffle>

# Modules
# Modules
codec: !new:speechbrain.lobes.models.discrete.speechtokenizer_interface.SpeechTokenizer_interface
    source: fnlp/SpeechTokenizer  # Only the 24kHz version supports mono audio
    save_path: !ref <save_folder>

discrete_embedding_layer: !new:custom_model.Discrete_EmbeddingLayer
    num_codebooks: !ref <num_codebooks>
    vocab_size: !ref <vocab_size>
    emb_dim: !ref <encoder_dim>

attention_mlp: !new:custom_model.AttentionMLP
    input_dim: !ref <encoder_dim>
    hidden_dim: !ref <encoder_dim>

embedding_model: !new:speechbrain.lobes.models.Xvector.Xvector
    in_channels: !ref <encoder_dim>
    activation: !name:torch.nn.LeakyReLU
    tdnn_blocks: 5
    tdnn_channels: [512, 512, 512, 512, 1500]
    tdnn_kernel_sizes: [5, 3, 3, 1, 1]
    tdnn_dilations: [1, 2, 3, 1, 1]
    lin_neurons: 512

classifier: !new:speechbrain.lobes.models.Xvector.Classifier
    input_shape: [null, null, 512]
    activation: !name:torch.nn.LeakyReLU
    lin_blocks: 1
    lin_neurons: 512
    out_neurons: !ref <out_n_neurons>


epoch_counter: !new:speechbrain.utils.epoch_loop.EpochCounter
    limit: !ref <number_of_epochs>


modules:
    embedding_model: !ref <embedding_model>
    classifier: !ref <classifier>
    attention_mlp: !ref <attention_mlp>
    codec: !ref <codec>
    discrete_embedding_layer: !ref <discrete_embedding_layer>

model: !new:torch.nn.ModuleList
    - [!ref <embedding_model>, !ref <classifier>, !ref <discrete_embedding_layer>, !ref <attention_mlp>]


# Cost + optimization
compute_cost: !name:speechbrain.nnet.losses.nll_loss
compute_error: !name:speechbrain.nnet.losses.classification_error

model_opt_class: !name:torch.optim.Adam
    lr: !ref <lr>
    weight_decay: 0.000002

lr_annealing: !new:speechbrain.nnet.schedulers.LinearScheduler
    initial_value: !ref <lr>
    final_value: !ref <lr_final>
    epoch_count: 21

lr_annealing_weights: !new:speechbrain.nnet.schedulers.NewBobScheduler
    initial_value: 0.01
    improvement_threshold: 0.0025
    annealing_factor: 0.9
    patient: 0


# Used to load the SB checkpoint of w2v2
pretrainer: !new:speechbrain.utils.parameter_transfer.Pretrainer
    collect_in: !ref <save_folder>


# Logging + checkpoints
train_logger: !new:speechbrain.utils.train_logger.FileTrainLogger
    save_file: !ref <train_log>

error_stats: !name:speechbrain.utils.metric_stats.MetricStats
    metric: !name:speechbrain.nnet.losses.classification_error
        reduction: batch

checkpointer: !new:speechbrain.utils.checkpoints.Checkpointer
    checkpoints_dir: !ref <save_folder>
    recoverables:
        embedding_model: !ref <embedding_model>
        attention_mlp: !ref <attention_mlp>
        codec: !ref <codec>
        discrete_embedding_layer: !ref <discrete_embedding_layer>
        classifier: !ref <classifier>
        counter: !ref <epoch_counter>

mean_var_norm_emb: !new:speechbrain.processing.features.InputNormalization
    norm_type: global
    std_norm: False
